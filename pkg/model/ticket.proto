syntax = "proto3";

package model;

option go_package = "/ticketing;ticket";

// Ticket Service Definition
service TicketService {
    rpc PurchaseTicket(PurchaseRequest) returns (PurchaseResponse);
    rpc GetReceipt(GetReceiptRequest) returns (GetReceiptResponse);
    rpc ViewUsersBySection(ViewUsersBySectionRequest) returns (ViewUsersBySectionResponse);
    rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse);
    rpc ModifyUserSeat(ModifySeatRequest) returns (ModifySeatResponse);
}

// User Message
message User {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
}

// Ticket Message
message Ticket {
    string from = 1;
    string to = 2;
    User user = 3;
    float price_paid = 4;
    string seat_number = 5;
    string section = 6;
    int32  ticket_number = 7;
}

// Request and Response Messages
message PurchaseRequest {
    string from = 1;
    string to = 2;
    User user = 3;
}

message PurchaseResponse {
    string seat_number = 1;
    string section = 2;
    string message = 3;
    int32  ticket_number = 4;
}

message GetReceiptRequest {
    int32 ticket_number = 1;
}

message GetReceiptResponse {
    Ticket ticket = 1;
}

message ViewUsersBySectionRequest {
    string section = 1;
}

message ViewUsersBySectionResponse {
    repeated Ticket tickets = 1;
}

message RemoveUserRequest {
    int32 ticket_number = 1;
}

message RemoveUserResponse {
    string message = 1;
}

message ModifySeatRequest {
    int32 ticket_number = 1;
    string new_seat_number = 2;
    string new_section = 3;
}

message ModifySeatResponse {
    string message = 1;
}
